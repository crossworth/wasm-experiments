
module.wasm:	file format wasm 0x1

Section Details:

Type[8]:
 - type[0] (i32) -> nil
 - type[1] () -> nil
 - type[2] (i32, i32, i32, i32) -> i32
 - type[3] (i32, i32) -> nil
 - type[4] (i32) -> i32
 - type[5] (i32, i32) -> i32
 - type[6] () -> i32
 - type[7] (i32, i32, i32, i32) -> nil
Import[1]:
 - func[0] sig=2 <runtime.fd_write> <- wasi_snapshot_preview1.fd_write
Function[45]:
 - func[1] sig=1 <runtime.runtimePanic>
 - func[2] sig=0 <internal/task.start>
 - func[3] sig=4 <runtime.alloc>
 - func[4] sig=1 <runtime.nilPanic>
 - func[5] sig=2 <runtime.memequal>
 - func[6] sig=2 <runtime.hash32>
 - func[7] sig=4 <malloc>
 - func[8] sig=3 <runtime.hashmapBinarySet>
 - func[9] sig=1 <runtime.slicePanic>
 - func[10] sig=0 <free>
 - func[11] sig=5 <runtime.hashmapBinaryGet>
 - func[12] sig=0 <runtime.hashmapBinaryDelete>
 - func[13] sig=0 <runtime._panic>
 - func[14] sig=1 <runtime.calculateHeapAddresses>
 - func[15] sig=0 <runtime.run$1$gowrapper>
 - func[16] sig=1 <runtime.scheduler>
 - func[17] sig=0 <runtime.resume$1$gowrapper>
 - func[18] sig=3 <runtime.runtimePanicAt>
 - func[19] sig=3 <runtime.printstring>
 - func[20] sig=1 <runtime.printnl>
 - func[21] sig=0 <runtime.putchar>
 - func[22] sig=1 <runtime.lookupPanic>
 - func[23] sig=3 <runtime.markRoots>
 - func[24] sig=4 <(runtime.gcBlock).state>
 - func[25] sig=0 <(runtime.gcBlock).markFree>
 - func[26] sig=6 <runtime.growHeap>
 - func[27] sig=0 <runtime.startMark>
 - func[28] sig=3 <(runtime.gcBlock).setState>
 - func[29] sig=4 <(runtime.gcBlock).findHead>
 - func[30] sig=2 <runtime.hashmapGet>
 - func[31] sig=5 <runtime.hashmapBucketAddrForHash>
 - func[32] sig=7 <runtime.hashmapSet>
 - func[33] sig=4 <malloc.command_export>
 - func[34] sig=0 <free.command_export>
 - func[35] sig=5 <calloc.command_export>
 - func[36] sig=5 <realloc.command_export>
 - func[37] sig=1 <_start.command_export>
 - func[38] sig=1 <resume.command_export>
 - func[39] sig=1 <go_scheduler.command_export>
 - func[40] sig=5 <add.command_export>
 - func[41] sig=0 <asyncify_start_unwind>
 - func[42] sig=1 <asyncify_stop_unwind>
 - func[43] sig=0 <asyncify_start_rewind>
 - func[44] sig=6 <asyncify_get_state>
 - func[45] sig=3 <byn$mgfn-shared$runtime.runtimePanic>
Table[1]:
 - table[0] type=funcref initial=5 max=5
Memory[1]:
 - memory[0] pages: initial=2
Global[3]:
 - global[0] i32 mutable=1 <__stack_pointer> - init i32=65536
 - global[1] i32 mutable=1 - init i32=0
 - global[2] i32 mutable=1 - init i32=0
Export[14]:
 - memory[0] -> "memory"
 - func[33] <malloc.command_export> -> "malloc"
 - func[34] <free.command_export> -> "free"
 - func[35] <calloc.command_export> -> "calloc"
 - func[36] <realloc.command_export> -> "realloc"
 - func[37] <_start.command_export> -> "_start"
 - func[38] <resume.command_export> -> "resume"
 - func[39] <go_scheduler.command_export> -> "go_scheduler"
 - func[40] <add.command_export> -> "add"
 - func[41] <asyncify_start_unwind> -> "asyncify_start_unwind"
 - func[42] <asyncify_stop_unwind> -> "asyncify_stop_unwind"
 - func[43] <asyncify_start_rewind> -> "asyncify_start_rewind"
 - func[42] <asyncify_stop_unwind> -> "asyncify_stop_rewind"
 - func[44] <asyncify_get_state> -> "asyncify_get_state"
Elem[1]:
 - segment[0] flags=0 table=0 count=4 - init i32=1
  - elem[1] = func[15] <runtime.run$1$gowrapper>
  - elem[2] = func[17] <runtime.resume$1$gowrapper>
  - elem[3] = func[5] <runtime.memequal>
  - elem[4] = func[6] <runtime.hash32>
DataCount:
 - data count: 2
Code[45]:
 - func[1] size=10 <runtime.runtimePanic>
 - func[2] size=532 <internal/task.start>
 - func[3] size=1052 <runtime.alloc>
 - func[4] size=10 <runtime.nilPanic>
 - func[5] size=62 <runtime.memequal>
 - func[6] size=55 <runtime.hash32>
 - func[7] size=418 <malloc>
 - func[8] size=211 <runtime.hashmapBinarySet>
 - func[9] size=10 <runtime.slicePanic>
 - func[10] size=327 <free>
 - func[11] size=224 <runtime.hashmapBinaryGet>
 - func[12] size=738 <runtime.hashmapBinaryDelete>
 - func[13] size=389 <runtime._panic>
 - func[14] size=51 <runtime.calculateHeapAddresses>
 - func[15] size=587 <runtime.run$1$gowrapper>
 - func[16] size=527 <runtime.scheduler>
 - func[17] size=182 <runtime.resume$1$gowrapper>
 - func[18] size=226 <runtime.runtimePanicAt>
 - func[19] size=241 <runtime.printstring>
 - func[20] size=88 <runtime.printnl>
 - func[21] size=255 <runtime.putchar>
 - func[22] size=10 <runtime.lookupPanic>
 - func[23] size=306 <runtime.markRoots>
 - func[24] size=30 <(runtime.gcBlock).state>
 - func[25] size=42 <(runtime.gcBlock).markFree>
 - func[26] size=72 <runtime.growHeap>
 - func[27] size=458 <runtime.startMark>
 - func[28] size=39 <(runtime.gcBlock).setState>
 - func[29] size=32 <(runtime.gcBlock).findHead>
 - func[30] size=738 <runtime.hashmapGet>
 - func[31] size=50 <runtime.hashmapBucketAddrForHash>
 - func[32] size=2408 <runtime.hashmapSet>
 - func[33] size=155 <malloc.command_export>
 - func[34] size=142 <free.command_export>
 - func[35] size=417 <calloc.command_export>
 - func[36] size=840 <realloc.command_export>
 - func[37] size=417 <_start.command_export>
 - func[38] size=336 <resume.command_export>
 - func[39] size=254 <go_scheduler.command_export>
 - func[40] size=7 <add.command_export>
 - func[41] size=25 <asyncify_start_unwind>
 - func[42] size=21 <asyncify_stop_unwind>
 - func[43] size=25 <asyncify_start_rewind>
 - func[44] size=4 <asyncify_get_state>
 - func[45] size=97 <byn$mgfn-shared$runtime.runtimePanic>
Data[2]:
 - segment[0] <.rodata> memory=0 size=197 - init i32=65536
  - 0010000: 7374 6163 6b20 6f76 6572 666c 6f77 6672  stack overflowfr
  - 0010010: 6565 3a20 696e 7661 6c69 6420 706f 696e  ee: invalid poin
  - 0010020: 7465 7200 0000 0000 0e00 0100 1500 0000  ter.............
  - 0010030: 7265 616c 6c6f 633a 2069 6e76 616c 6964  realloc: invalid
  - 0010040: 2070 6f69 6e74 6572 3000 0100 1800 0000   pointer0.......
  - 0010050: 6f75 7420 6f66 206d 656d 6f72 7970 616e  out of memorypan
  - 0010060: 6963 3a20 7061 6e69 633a 2072 756e 7469  ic: panic: runti
  - 0010070: 6d65 2065 7272 6f72 3a20 6e69 6c20 706f  me error: nil po
  - 0010080: 696e 7465 7220 6465 7265 6665 7265 6e63  inter dereferenc
  - 0010090: 6569 6e64 6578 206f 7574 206f 6620 7261  eindex out of ra
  - 00100a0: 6e67 6573 6c69 6365 206f 7574 206f 6620  ngeslice out of 
  - 00100b0: 7261 6e67 6575 6e72 6561 6368 6162 6c65  rangeunreachable
  - 00100c0: b500 0100 0b                             .....
 - segment[1] <.data> memory=0 size=49 - init i32=65736
  - 00100c8: c182 0100 1001 0100 0000 0000 c801 0100  ................
  - 00100d8: c182 0100 0000 0000 0400 0000 0c00 0000  ................
  - 00100e8: 0100 0000 0000 0000 0300 0000 0000 0000  ................
  - 00100f8: 04                                       .
Custom:
 - name: "name"
 - func[0] <runtime.fd_write>
 - func[1] <runtime.runtimePanic>
 - func[2] <internal/task.start>
 - func[3] <runtime.alloc>
 - func[4] <runtime.nilPanic>
 - func[5] <runtime.memequal>
 - func[6] <runtime.hash32>
 - func[7] <malloc>
 - func[8] <runtime.hashmapBinarySet>
 - func[9] <runtime.slicePanic>
 - func[10] <free>
 - func[11] <runtime.hashmapBinaryGet>
 - func[12] <runtime.hashmapBinaryDelete>
 - func[13] <runtime._panic>
 - func[14] <runtime.calculateHeapAddresses>
 - func[15] <runtime.run$1$gowrapper>
 - func[16] <runtime.scheduler>
 - func[17] <runtime.resume$1$gowrapper>
 - func[18] <runtime.runtimePanicAt>
 - func[19] <runtime.printstring>
 - func[20] <runtime.printnl>
 - func[21] <runtime.putchar>
 - func[22] <runtime.lookupPanic>
 - func[23] <runtime.markRoots>
 - func[24] <(runtime.gcBlock).state>
 - func[25] <(runtime.gcBlock).markFree>
 - func[26] <runtime.growHeap>
 - func[27] <runtime.startMark>
 - func[28] <(runtime.gcBlock).setState>
 - func[29] <(runtime.gcBlock).findHead>
 - func[30] <runtime.hashmapGet>
 - func[31] <runtime.hashmapBucketAddrForHash>
 - func[32] <runtime.hashmapSet>
 - func[33] <malloc.command_export>
 - func[34] <free.command_export>
 - func[35] <calloc.command_export>
 - func[36] <realloc.command_export>
 - func[37] <_start.command_export>
 - func[38] <resume.command_export>
 - func[39] <go_scheduler.command_export>
 - func[40] <add.command_export>
 - func[41] <asyncify_start_unwind>
 - func[42] <asyncify_stop_unwind>
 - func[43] <asyncify_start_rewind>
 - func[44] <asyncify_get_state>
 - func[45] <byn$mgfn-shared$runtime.runtimePanic>
 - global[0] <__stack_pointer>
 - dataseg[0] <.rodata>
 - dataseg[1] <.data>
Custom:
 - name: "producers"
Custom:
 - name: "target_features"
  - [+] mutable-globals
  - [+] nontrapping-fptoint
  - [+] bulk-memory
  - [+] sign-ext
